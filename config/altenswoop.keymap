/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_fr.h"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
        M_BSPACE: M_BSPACE {
            compatible = "zmk,behavior-mod-morph";
            label = "M_BSPACE";
            bindings =
                <&kp BACKSPACE>,
                <&kp DELETE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_COLON: M_COLON {
            compatible = "zmk,behavior-mod-morph";
            label = "M_COLON";
            bindings =
                <&kp FR_COLON>,
                <&kp FR_SEMICOLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_QUOTE: M_QUOTE {
            compatible = "zmk,behavior-mod-morph";
            label = "M_QUOTE";
            bindings =
                <&kp FR_SINGLE_QUOTE>,
                <&kp FR_DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_BSLASH: M_BSLASH {
            compatible = "zmk,behavior-mod-morph";
            label = "M_BSLASH";
            bindings =
                <&kp FR_BACKSLASH>,
                <&kp FR_PIPE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_COMMA: M_COMMA {
            compatible = "zmk,behavior-mod-morph";
            label = "M_COMMA";
            bindings =
                <&kp FR_COMMA>,
                <&kp FR_LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_DOT: M_DOT {
            compatible = "zmk,behavior-mod-morph";
            label = "M_DOT";
            bindings =
                <&kp FR_DOT>,
                <&kp FR_GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_SLASH: M_SLASH {
            compatible = "zmk,behavior-mod-morph";
            label = "M_SLASH";
            bindings =
                <&kp FR_SLASH>,
                <&kp FR_QUESTION>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_MINUS: M_MINUS {
            compatible = "zmk,behavior-mod-morph";
            label = "M_MINUS";
            bindings =
                <&kp FR_MINUS>,
                <&kp FR_UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_GRAVE: M_GRAVE {
            compatible = "zmk,behavior-mod-morph";
            label = "M_GRAVE";
            bindings =
                <&kp FR_GRAVE>,
                <&kp FR_TILDE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_SPACE: M_SPACE {
            compatible = "zmk,behavior-mod-morph";
            label = "M_SPACE";
            bindings =
                <&kp SPACE>,
                <&kp TAB>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
        M_GUI_B: M_GUI_B {
            compatible = "zmk,behavior-mod-morph";
            label = "M_GUI_B";
            bindings =
                <&kp FR_B>,
                <&kp LC(FR_B)>;

            #binding-cells = <0>;
            mods = <(MOD_LGUI)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        CB_E_ACUTE {
            bindings = <&kp FR_E_ACUTE>;
            key-positions = <2 16>;
            layers = <0>;
        };

        CB_E_CIRC {
            bindings = <&FR_E_CIRC>;
            key-positions = <2 17>;
            layers = <0>;
        };

        CB_E_GRAVE {
            bindings = <&kp FR_E_GRAVE>;
            key-positions = <2 18>;
            layers = <0>;
        };

        CB_E_TRM {
            bindings = <&FR_E_TRM>;
            key-positions = <2 19>;
            layers = <0>;
        };

        CB_A_ACUTE {
            bindings = <&none>;
            key-positions = <10 16>;
            layers = <0>;
        };

        CB_A_CIRC {
            bindings = <&FR_A_CIRC>;
            key-positions = <10 17>;
            layers = <0>;
        };

        CB_A_GRAVE {
            bindings = <&kp FR_A_GRAVE>;
            key-positions = <10 18>;
            layers = <0>;
        };

        CB_A_TRM {
            bindings = <&FR_A_TRM>;
            key-positions = <10 19>;
            layers = <0>;
        };

        CB_O_ACUTE {
            bindings = <&none>;
            key-positions = <8 11>;
            layers = <0>;
        };

        CB_O_CIRC {
            bindings = <&FR_O_CIRC>;
            key-positions = <12 8>;
            layers = <0>;
        };

        CB_O_GRAVE {
            bindings = <&none>;
            key-positions = <8 13>;
            layers = <0>;
        };

        CB_O_TRM {
            bindings = <&FR_O_TRM>;
            key-positions = <14 8>;
            layers = <0>;
        };

        CB_I_ACUTE {
            bindings = <&none>;
            key-positions = <7 11>;
            layers = <0>;
        };

        CB_I_CIRC {
            bindings = <&FR_I_CIRC>;
            key-positions = <12 7>;
            layers = <0>;
        };

        CB_I_GRAVE {
            bindings = <&none>;
            key-positions = <13 7>;
            layers = <0>;
        };

        CB_I_TRM {
            bindings = <&FR_I_TRM>;
            key-positions = <14 7>;
            layers = <0>;
        };

        CB_U_ACUTE {
            bindings = <&none>;
            key-positions = <6 11>;
            layers = <0>;
        };

        CB_U_CIRC {
            bindings = <&FR_U_CIRC>;
            key-positions = <6 12>;
            layers = <0>;
        };

        CB_U_GRAVE {
            bindings = <&kp FR_U_GRAVE>;
            key-positions = <13 6>;
            layers = <0>;
        };

        CB_U_TRM {
            bindings = <&FR_U_TRM>;
            key-positions = <14 6>;
            layers = <0>;
        };

        CB_C_CED {
            bindings = <&kp FR_C_CEDILLA>;
            key-positions = <16 22>;
            layers = <0>;
        };
    };

    macros {
        FR_E_CIRC: FR_E_CIRC {
            compatible = "zmk,behavior-macro";
            label = "FR_E_CIRC";
            #binding-cells = <0>;
            bindings = <&kp FR_CARET &kp FR_E>;
        };
        FR_A_CIRC: FR_A_CIRC {
            compatible = "zmk,behavior-macro";
            label = "FR_A_CIRC";
            #binding-cells = <0>;
            bindings = <&kp FR_CARET &kp FR_A>;
        };
        FR_O_CIRC: FR_O_CIRC {
            compatible = "zmk,behavior-macro";
            label = "FR_O_CIRC";
            #binding-cells = <0>;
            bindings = <&kp FR_CARET &kp FR_O>;
        };
        FR_I_CIRC: FR_I_CIRC {
            compatible = "zmk,behavior-macro";
            label = "FR_I_CIRC";
            #binding-cells = <0>;
            bindings = <&kp FR_CARET &kp FR_I>;
        };
        FR_E_TRM: FR_E_TRM {
            compatible = "zmk,behavior-macro";
            label = "FR_E_TRM";
            #binding-cells = <0>;
            bindings = <&kp LS(FR_CARET) &kp FR_E>;
        };
        FR_A_TRM: FR_A_TRM {
            compatible = "zmk,behavior-macro";
            label = "FR_A_TRM";
            #binding-cells = <0>;
            bindings = <&kp LS(FR_CARET) &kp FR_A>;
        };
        FR_O_TRM: FR_O_TRM {
            compatible = "zmk,behavior-macro";
            label = "FR_O_TRM";
            #binding-cells = <0>;
            bindings = <&kp LS(FR_CARET) &kp FR_O>;
        };
        FR_I_TRM: FR_I_TRM {
            compatible = "zmk,behavior-macro";
            label = "FR_I_TRM";
            #binding-cells = <0>;
            bindings = <&kp LS(FR_CARET) &kp FR_I>;
        };
        FR_U_CIRC: FR_U_CIRC {
            compatible = "zmk,behavior-macro";
            label = "FR_U_CIRC";
            #binding-cells = <0>;
            bindings = <&kp FR_CARET &kp FR_U>;
        };
        FR_U_TRM: FR_U_TRM {
            compatible = "zmk,behavior-macro";
            label = "FR_U_TRM";
            #binding-cells = <0>;
            bindings = <&kp LS(FR_CARET) &kp FR_U>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp FR_Q        &kp FR_W       &kp FR_E       &kp FR_R    &kp FR_T    &kp FR_Y     &kp FR_U    &kp FR_I       &kp FR_O       &mt LEFT_CONTROL FR_P
&mt LSHFT FR_A  &mt LGUI FR_S  &mt LALT FR_D  &lt 2 FR_F  &kp FR_G    &M_COLON     &lt 2 FR_H  &mt LALT FR_J  &mt LGUI FR_K  &mt LSHFT FR_L
&mt LCTRL FR_Z  &kp FR_X       &kp FR_C       &lt 3 FR_V  &M_GUI_B    &kp FR_N     &kp FR_M    &M_COMMA       &M_DOT         &M_SLASH
                               &none          &lt 1 ESC   &M_SPACE    &lt 1 ENTER  &M_BSPACE   &none
            >;

            sensor-bindings =
                <&inc_dec_kp TAB LS(TAB)>,
                <&inc_dec_kp LG(FR_L) LG(FR_H)>;
        };

        symbols {
            label = "SYMBOLS";
            bindings = <
&kp FR_EXCLAMATION  &kp FR_AT      &kp FR_LEFT_BRACE        &kp FR_RIGHT_BRACE        &kp FR_PIPE     &kp FR_BACKSLASH  &M_QUOTE  &kp FR_EQUAL  &trans  &kp FR_ASTRK
&kp LSHIFT          &kp FR_DOLLAR  &kp FR_LEFT_PARENTHESIS  &kp FR_RIGHT_PARENTHESIS  &kp FR_HASH     &trans            &kp LEFT  &kp DOWN      &kp UP  &kp RIGHT
&kp FR_PERCENT      &kp FR_CARET   &kp FR_LEFT_BRACKET      &kp FR_RIGHT_BRACKET      &kp FR_TILDE    &kp FR_AMPS       &M_MINUS  &kp FR_GRAVE  &trans  &trans
                                   &none                    &trans                    &trans          &trans            &trans    &none
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        function {
            label = "FUNCTION";
            bindings = <
&none   &kp HOME              &kp END               &kp PAGE_UP  &kp PAGE_DOWN    &none   &kp K_PREV    &kp K_NEXT         &kp K_PLAY_PAUSE  &none
&trans  &none                 &none                 &trans       &trans           &none   &none         &kp K_SCROLL_DOWN  &kp K_SCROLL_UP   &none
&none   &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &none        &none            &none   &kp C_VOL_DN  &kp C_VOL_UP       &kp C_MUTE        &none
                              &none                 &trans       &trans           &trans  &trans        &none
            >;

            sensor-bindings =
                <&inc_dec_kp LG(RIGHT) LG(LEFT)>,
                <&inc_dec_kp F24 F24>;
        };

        numpad {
            bindings = <
&none        &none  &none       &none       &none     &none      &kp FR_N7  &kp FR_N8  &kp FR_N9  &none
&none        &none  &bt BT_PRV  &bt BT_NXT  &none     &none      &kp FR_N4  &kp FR_N5  &kp FR_N6  &none
&bootloader  &none  &none       &none       &none     &kp FR_N0  &kp FR_N1  &kp FR_N2  &kp FR_N3  &bootloader
                    &none       &kp LS(G)   &trans    &trans     &trans     &none
            >;

            label = "NUM";
            sensor-bindings =
                <&inc_dec_kp F24 F24>,
                <&inc_dec_kp F14 F15>;
        };
    };
};
