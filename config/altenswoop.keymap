/*
 * Copyright (c) 2020 duckyb
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include "keys_fr.h"
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        tab_esc_ctrl: tab_esc_ctrl {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB_ESC_CTRL";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ESC>,
                <&kp TAB>;
        };
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            quick-tap-ms = <180>;
            tapping-term-ms = <200>;
            global-quick-tap;
        };
        ltq: ltq {
            compatible = "zmk,behavior-hold-tap";
            label = "LTQ";
            bindings =
                <&mo>,
                <&kp>;

            #binding-cells = <2>;
            global-quick-tap;
            tapping-term-ms = <200>;
            quick-tap-ms = <180>;
        };
    };

    combos {
        compatible = "zmk,combos";

        capslock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <11 18>;
            layers = <0>;
        };

        dh {
            bindings = <&m_paren_quote>;
            key-positions = <12 15>;
            layers = <0>;
        };

        gh {
            bindings = <&kp MINUS>;
            key-positions = <14 15>;
            layers = <0>;
        };

        s, {
            bindings = <&m_lt_gt_left>;
            key-positions = <11 27>;
            layers = <0>;
        };
    };

    macros {
        m_a_grave: m_a_grave {
            compatible = "zmk,behavior-macro";
            label = "M_A_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp A>;
        };
        m_a_caret: m_a_caret {
            compatible = "zmk,behavior-macro";
            label = "M_A_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp A>;
        };
        m_e_cute: m_e_cute {
            compatible = "zmk,behavior-macro";
            label = "M_E_CUTE";
            #binding-cells = <0>;
            bindings = <&kp LA(E) &kp E>;
        };
        m_e_grave: m_e_grave {
            compatible = "zmk,behavior-macro";
            label = "M_E_GRAVE";
            #binding-cells = <0>;
            bindings = <&kp LA(GRAVE) &kp E>;
        };
        m_e_caret: m_e_caret {
            compatible = "zmk,behavior-macro";
            label = "M_E_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp E>;
        };
        m_ou: m_ou {
            compatible = "zmk,behavior-macro";
            label = "M_OU";
            #binding-cells = <0>;
            bindings = <&kp O &kp LA(GRAVE) &kp U>;
        };
        m_u_caret: m_u_caret {
            compatible = "zmk,behavior-macro";
            label = "M_U_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp U>;
        };
        m_o_caret: m_o_caret {
            compatible = "zmk,behavior-macro";
            label = "M_O_CARET";
            #binding-cells = <0>;
            bindings = <&kp LA(I) &kp O>;
        };
        m_paren_quote: m_paren_quote {
            compatible = "zmk,behavior-macro";
            label = "M_PAREN_QUOTE";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS &kp DOUBLE_QUOTES>;
        };
        m_lt_gt_left: m_lt_gt_left {
            compatible = "zmk,behavior-macro";
            label = "M_LT_GT_LEFT";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN &kp GREATER_THAN &kp LEFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            label = "Base";
            bindings = <
&kp FR_Q        &kp FR_W       &kp FR_E       &kp FR_R    &kp FR_T     &kp FR_Y      &kp FR_U       &kp FR_I       &kp FR_O       &kp FR_P
&mt LSHFT FR_A  &mt LGUI FR_S  &mt LALT FR_D  &lt 2 FR_F  &kp FR_G     &kp FR_COLON  &lt 2 FR_H     &mt LALT FR_J  &mt LGUI FR_K  &mt LSHFT FR_L
&mt LCTRL FR_Z  &kp FR_X       &kp FR_C       &lt 3 FR_V  &kp FR_B     &kp FR_N      &kp FR_M       &kp FR_COMMA   &kp FR_DOT     &mt LCTRL FR_SLASH
                               &none          &lt 1 ESC   &kp SPACE    &lt 1 ENTER   &kp BACKSPACE  &none
            >;

            sensor-bindings =
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>,
                <&inc_dec_kp K_VOLUME_UP K_VOLUME_DOWN>;
        };

        symbols {
            label = "SYMBOLS";
            bindings = <
&none           &kp FR_AT      &kp FR_LEFT_BRACE        &kp FR_RIGHT_BRACE        &kp FR_PIPE     &kp FR_BACKSLASH  &kp FR_SINGLE_QUOTE  &kp FR_EQUAL  &trans  &kp FR_ASTRK
&kp LSHIFT      &kp FR_DOLLAR  &kp FR_LEFT_PARENTHESIS  &kp FR_RIGHT_PARENTHESIS  &kp FR_HASH     &trans            &kp LEFT             &kp DOWN      &kp UP  &kp RIGHT
&kp FR_PERCENT  &kp FR_CARET   &kp FR_LEFT_BRACKET      &kp FR_RIGHT_BRACKET      &kp FR_TILDE    &kp FR_AMPS       &kp FR_MINUS         &kp FR_GRAVE  &trans  &trans
                               &none                    &trans                    &trans          &trans            &trans               &none
            >;

            sensor-bindings =
                <&inc_dec_kp PAGE_UP PAGE_DOWN>,
                <&inc_dec_kp LG(Z) LG(LS(Z))>;
        };

        function {
            label = "FUNCTION";
            bindings = <
&none   &kp HOME              &kp END               &kp PAGE_UP  &kp PAGE_DOWN    &none   &kp K_PREV    &kp K_NEXT         &kp K_PLAY_PAUSE  &none
&trans  &m_a_caret            &none                 &trans       &trans           &none   &none         &kp K_SCROLL_DOWN  &kp K_SCROLL_UP   &none
&none   &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &none        &none            &none   &kp C_VOL_DN  &kp C_VOL_UP       &kp C_MUTE        &none
                              &none                 &trans       &trans           &trans  &trans        &none
            >;

            sensor-bindings =
                <&inc_dec_kp LG(RIGHT) LG(LEFT)>,
                <&inc_dec_kp F24 F24>;
        };

        numpad {
            bindings = <
&none  &none  &none  &none      &none     &none         &kp N7  &kp N8  &kp N9  &none
&none  &none  &none  &none      &none     &none         &kp N4  &kp N5  &kp N6  &none
&none  &none  &none  &none      &none     &kp NUMBER_0  &kp N1  &kp N2  &kp N3  &none
              &none  &kp LS(G)  &trans    &trans        &trans  &none
            >;

            label = "NUM";
            sensor-bindings =
                <&inc_dec_kp F24 F24>,
                <&inc_dec_kp F14 F15>;
        };
    };
};
